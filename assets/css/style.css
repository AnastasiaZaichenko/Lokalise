/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}
.container{
  width:min(100% - 40px, 1290px);
  margin-inline:auto;
}

.btn{
  min-width:120px;
  min-height:45px;
  border-width:1px;
  border-style:solid;
  font-weight:600;
  font-size:16px;
}
.btn--light{
  background-color:#ffffff;
  border-color:rgba(0, 0, 0, 0.5);
}
.btn--accent{
  background-color:#FF6336;
  border-color:#FF6336;
}
.btn--sm{
  min-width:120px;
}

.visually-hidden{
  position:absolute;
  width:1px;
  height:1px;
  margin:-1px;
  border:0;
  padding:0;
  white-space:nowrap;
  clip-path:inset(100%);
  clip:rect(0 0 0 0);
  overflow:hidden;
}

@font-face{
  font-family:"Graphik LCG";
  src:url("./../fonts/GraphikLCG-Regular.woff2") format("woff2"), url("./../fonts/GraphikLCG-Regular.woff") format("woff");
  font-weight:normal;
  font-style:normal;
  font-display:swap;
}
@font-face{
  font-family:"Graphik LCG";
  src:url("./../fonts/GraphikLCG-Semibold.woff2") format("woff2"), url("./../fonts/GraphikLCG-Semibold.woff") format("woff");
  font-weight:600;
  font-style:normal;
  font-display:swap;
}
*,
*::before,
*::after{
  box-sizing:border-box;
}

html{
  font-size:16px;
  overflow:scroll;
}

body{
  font-size:15px;
  font-family:"Graphik LCG", sans-serif;
  overflow-x:hidden;
}

a{
  text-decoration:none;
  color:#000000;
}

h1{
  font-weight:600;
  font-size:65px;
  line-height:1.08;
}

.header-actions{
  display:flex;
  gap:10px;
}

.header-content{
  display:grid;
  flex-grow:1;
  align-content:center;
  padding:80px 0;
  row-gap:25px;
}
.header-content__title{
  grid-area:ttl;
  margin:0 0 25px;
}
.header-content__description{
  grid-area:dsc;
  line-height:1.4;
  margin-bottom:25px;
}
.header-content__actions{
  grid-area:act;
  display:flex;
  gap:10px;
}
.header-content__notes{
  grid-area:nts;
  line-height:1.67;
}
.header-content__picture{
  grid-area:pic;
}

.header-menu{
  position:relative;
  display:flex;
  align-items:center;
  gap:20px 50px;
  padding:25px 0;
}
.header-menu::after{
  content:"";
  position:absolute;
  bottom:0;
  left:50%;
  height:1px;
  width:100vw;
  margin-left:-50vw;
  background-color:#cccccc;
}
.header-menu__navbar{
  flex-grow:1;
}
.header-navbar__btn{
  display:none;
}
.header-navbar__list{
  display:flex;
  flex-wrap:wrap;
  list-style:none;
  margin:0;
  padding:0;
}
.header-navbar__link{
  display:block;
  padding:0.5em 0;
  color:#000000;
}

.header{
  min-height:100vh;
  background-color:#ffffff;
  position:relative;
  display:flex;
  flex-direction:column;
}

.brands{
  background-color:#FF9C7D;
  color:#000000;
  padding:105px 0;
  margin-bottom:90px;
}
.brands__title{
  font-weight:600;
  line-height:1.2;
  text-align:center;
  color:#000000;
  margin:0 auto 70px;
  max-width:720px;
}
.brands__list{
  gap:20px;
  display:flex;
  align-items:center;
  justify-content:space-between;
}

.control{
  display:flex;
  margin-bottom:250px;
}
.control__content{
  display:flex;
  flex-direction:column;
  justify-content:center;
  flex-basis:0;
  flex-grow:1;
}
.control__title{
  font-weight:600;
  line-height:1.2;
  margin:0;
}
.control__description{
  font-weight:400;
  font-size:20px;
  line-height:1.5;
}
.control__button{
  font-weight:600;
  font-size:20px;
  line-height:1.5;
}

.time{
  display:flex;
  margin-bottom:250px;
  flex-direction:row-reverse;
}
.time__content{
  display:flex;
  flex-direction:column;
  justify-content:center;
  flex-basis:0;
  flex-grow:1;
}
.time__title{
  font-weight:600;
  line-height:1.2;
  margin:0;
}
.time__description{
  font-weight:400;
  font-size:20px;
  line-height:1.5;
}
.time__button{
  font-weight:600;
  font-size:20px;
  line-height:1.5;
}

.quality{
  display:flex;
  margin-bottom:250px;
}
.quality__content{
  display:flex;
  flex-direction:column;
  justify-content:center;
  flex-basis:0;
  flex-grow:1;
}
.quality__title{
  font-weight:600;
  line-height:1.2;
  margin:0;
}
.quality__description{
  font-weight:400;
  font-size:20px;
  line-height:1.5;
}
.quality__button{
  font-weight:600;
  font-size:20px;
  line-height:1.5;
}

.work{
  display:flex;
  margin-bottom:250px;
  flex-direction:row-reverse;
}
.work__content{
  display:flex;
  flex-direction:column;
  justify-content:center;
  flex-basis:0;
  flex-grow:1;
}
.work__title{
  font-weight:600;
  line-height:1.2;
  margin:0;
}
.work__description{
  font-weight:400;
  font-size:20px;
  line-height:1.5;
}
.work__button{
  font-weight:600;
  font-size:20px;
  line-height:1.5;
}

.opportunities{
  background-color:#FFF8E4;
  padding-top:120px;
  padding-bottom:127px;
}
.opportunities__title{
  font-weight:600;
  font-size:50px;
  line-height:1.2;
  text-align:center;
  margin:0 0 80px;
}
.opportunities__content{
  display:grid;
  gap:78px 110px;
}

.opportunity-item{
  display:flex;
  flex-direction:column;
  text-align:center;
  gap:17px;
}
.opportunity-item__title{
  font-weight:600;
  font-size:25px;
  line-height:1.4;
  margin:0 0 12px;
}
.opportunity-item__description{
  font-size:1.125rem;
  line-height:1.4;
  margin:0;
}
.opportunity-item__picture{
  order:-1;
}

.productivity{
  padding-top:154px;
  padding-bottom:154px;
}
.productivity__title{
  font-weight:600;
  font-size:50px;
  line-height:1.2;
  text-align:center;
  margin-bottom:90px;
}

.productivity-item{
  display:flex;
  flex-direction:column;
}
.productivity-item__title{
  font-weight:600;
  font-size:30px;
  line-height:1.33;
  margin-top:60px;
}
.productivity-item__description{
  font-weight:400;
  font-size:20px;
  line-height:1.5;
  padding-right:30px;
  margin-top:35px;
  margin-bottom:25px;
}
.productivity-item__button{
  font-weight:400;
  font-size:20px;
  line-height:1.5;
}
.productivity-item__link{
  text-decoration:underline;
}
.productivity-item__pictures{
  order:-1;
}
.productivity-item__image{
  height:200px;
}

.quote{
  background-color:#C9E8F2;
  padding-top:50px;
  padding-bottom:150px;
}
.quote__content{
  margin:0;
}

.quote-item{
  margin:0 0;
}
.quote-item__description{
  font-weight:400;
  line-height:1.33;
  margin:0 0;
}
.quote-item__signature{
  margin-top:23px;
}
.quote-item__signature-author{
  font-family:"Roboto", sans-serif;
  font-style:normal;
  font-weight:400;
  font-size:15px;
  line-height:1.67;
}
.quote-item__signature-pictures{
  margin-top:7px;
}

.translation{
  background-color:#DABC98;
}
.translation__content{
  display:flex;
  gap:70px;
  padding:70px 0;
  align-items:center;
}
.translation__title{
  font-weight:600;
  font-size:35px;
  line-height:1.43;
}
.translation__picture{
  order:-1;
}
.translation__icon{
  display:flex;
  max-height:116px;
  padding:0 65px;
}

.integration__content{
  display:flex;
  flex-direction:column;
  align-items:center;
  text-align:center;
}
.integration__title{
  font-weight:600;
  line-height:1.15;
  margin:165px 0 0 0;
  max-width:800px;
}
.integration__description{
  font-weight:400;
  line-height:1.2;
  margin:0 0 25px;
  max-width:585px;
}
.integration__picture{
  max-width:1023px;
}
.integration__button{
  min-width:193px;
  min-height:60px;
  border-width:1px;
  border-style:solid;
  font-weight:600;
  font-size:16px;
  background-color:#FF6336;
  border-color:#FF6336;
  display:flex;
  align-items:center;
  justify-content:center;
  margin:32px 0 160px;
}
.integration__button-item{
  color:#ffffff;
  padding:15px 15px;
}
@media (min-width: 576px){
  .opportunities__content{
    padding:0 40px;
  }
}
@media (min-width: 768px){
  .control__image{
    width:100%;
  }
  .time__image{
    width:100%;
  }
  .quality__image{
    width:100%;
  }
  .work__image{
    width:100%;
  }
  .productivity__content{
    display:flex;
    flex-grow:1;
    flex-shrink:1;
  }
  .quote__content{
    display:flex;
    gap:85px;
  }
  .integration__title{
    font-size:65px;
  }
  .integration__description{
    font-size:25px;
  }
  .integration__image{
    width:100%;
  }
}
@media (min-width: 992px){
  .btn--sm{
    min-height:45px;
  }
  .btn--md{
    min-width:160px;
    min-height:60px;
  }
  .header-content__description{
    padding-right:70px;
  }
  .header-content__image{
    width:100%;
    transform:translateX(-20px);
  }
  .control__title{
    font-size:50px;
  }
  .control__description{
    font-size:20px;
  }
  .time__title{
    font-size:50px;
  }
  .time__description{
    font-size:20px;
  }
  .quality__title{
    font-size:50px;
  }
  .quality__description{
    font-size:20px;
  }
  .work__title{
    font-size:50px;
  }
  .work__description{
    font-size:20px;
  }
  .quote-item__description{
    font-size:30px;
  }
  .translation__icon{
    border-left:1px solid black;
    gap:70px;
  }
}
@media (min-width: 1200px){
  h1{
    font-size:65px;
  }
  .header-content{
    grid-template-areas:"ttl pic" "dsc pic" "act pic" "nts pic";
    grid-template-columns:560px 1fr;
  }
  .header-content__description{
    font-size:25px;
  }
  .header-navbar__list{
    gap:20px 50px;
  }
  .brands__title{
    font-size:50px;
  }
  .control{
    gap:138px;
  }
  .control__content{
    gap:15px;
  }
  .control__picture{
    flex-basis:632px;
  }
  .time{
    gap:138px;
  }
  .time__content{
    gap:15px;
  }
  .time__picture{
    flex-basis:632px;
  }
  .quality{
    gap:138px;
  }
  .quality__content{
    gap:15px;
  }
  .quality__picture{
    flex-basis:632px;
  }
  .work{
    gap:138px;
  }
  .work__content{
    gap:15px;
  }
  .work__picture{
    flex-basis:632px;
  }
  .opportunities__content{
    grid-template-columns:repeat(3, 1fr);
  }
}
@media (max-width: 1199.8px){
  .header-content__description{
    font-size:1.25rem;
  }
  .header-navbar__list{
    gap:0 20px;
    justify-content:center;
  }
  .brands__title{
    font-size:35px;
  }
  .control__picture{
    flex-basis:0;
    flex-grow:1;
  }
  .time__picture{
    flex-basis:0;
    flex-grow:1;
  }
  .quality__picture{
    flex-basis:0;
    flex-grow:1;
  }
  .work__picture{
    flex-basis:0;
    flex-grow:1;
  }
}
@media (max-width: 1199.8px) and (min-width: 768px){
  .opportunities__content{
    grid-template-columns:repeat(2, 1fr);
  }
}
@media (max-width: 1199.8px) and (min-width: 992px){
  h1{
    font-size:50px;
  }
  .header-content{
    grid-template-areas:"ttl pic" "dsc pic" "act pic" "nts pic";
    grid-template-columns:1fr 1fr;
  }
  .control{
    gap:60px;
  }
  .time{
    gap:60px;
  }
  .quality{
    gap:60px;
  }
  .work{
    gap:60px;
  }
}
@media (max-width: 991.8px){
  .btn--sm{
    min-height:40px;
  }
  h1{
    font-size:40px;
  }
  .header-content{
    grid-template-areas:"ttl" "dsc" "pic" "act" "nts";
    text-align:center;
  }
  .header-content__actions{
    justify-content:center;
  }
  .header-content__image{
    width:50%;
  }
  .header-menu{
    flex-direction:column;
  }
  .brands__list{
    flex-wrap:wrap;
    justify-content:center;
  }
  .control{
    gap:30px;
  }
  .control__description{
    font-size:18px;
  }
  .time{
    gap:30px;
  }
  .time__description{
    font-size:18px;
  }
  .quality{
    gap:30px;
  }
  .quality__description{
    font-size:18px;
  }
  .work{
    gap:30px;
  }
  .work__description{
    font-size:18px;
  }
  .quote-item__description{
    font-size:20px;
  }
  .translation__content{
    flex-wrap:wrap;
    justify-content:center;
    text-align:center;
  }
  .translation__icon{
    gap:30px;
  }
}
@media (max-width: 991.8px) and (min-width: 480px){
  .btn--md{
    min-width:160px;
    min-height:50px;
  }
}
@media (max-width: 991.8px) and (min-width: 768px){
  .control__title{
    font-size:40px;
  }
  .time__title{
    font-size:40px;
  }
  .quality__title{
    font-size:40px;
  }
  .work__title{
    font-size:40px;
  }
}
@media (max-width: 767.8px){
  .control{
    flex-direction:column;
  }
  .control__title{
    font-size:30px;
  }
  .time{
    flex-direction:column;
  }
  .time__title{
    font-size:30px;
  }
  .quality{
    flex-direction:column;
  }
  .quality__title{
    font-size:30px;
  }
  .work{
    flex-direction:column;
  }
  .work__title{
    font-size:30px;
  }
  .opportunities__title{
    font-size:35px;
  }
  .opportunities__content{
    gap:40px 110px;
  }
  .opportunity-item__title{
    font-size:22px;
  }
  .opportunity-item__description{
    font-size:18px;
  }
  .productivity__title{
    font-size:35px;
  }
  .productivity__content{
    flex-wrap:wrap;
    text-align:center;
  }
  .productivity-item{
    padding-bottom:30px;
  }
  .productivity-item__title{
    margin-top:40px;
    font-size:22px;
  }
  .productivity-item__description{
    margin-top:10px;
    padding-right:0;
    font-size:18px;
  }
  .productivity-item__button{
    font-size:18px;
  }
  .quote{
    padding-bottom:70px;
  }
  .quote__content{
    text-align:center;
  }
  .quote-item__signature-pictures{
    margin-bottom:30px;
  }
  .integration__title{
    font-size:40px;
    margin:50px 0;
  }
  .integration__description{
    font-size:23px;
    margin-bottom:50px;
  }
}
@media (max-width: 767.8px) and (min-width: 576px){
  .control__image{
    width:95%;
  }
  .time__image{
    width:95%;
  }
  .quality__image{
    width:95%;
  }
  .work__image{
    width:95%;
  }
  .integration__image{
    width:95%;
  }
}
@media (max-width: 575.8px){
  .control__image{
    width:90%;
  }
  .time__image{
    width:90%;
  }
  .quality__image{
    width:90%;
  }
  .work__image{
    width:90%;
  }
  .integration__image{
    width:90%;
  }
}
@media (max-width: 479.8px){
  .btn--md{
    min-width:140px;
    min-height:45px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */